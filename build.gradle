import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.DockerTagImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'
    // Apply the application plugin to add support for building an application
    id 'application'
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '4.6.2'
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

if (project.hasProperty("runTags")) {
    tags = Eval.me runTags
}

repositories {
    maven { url ossimMavenProxy }
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:2.5.4'
    compile group: 'com.github.mkolisnyk', name: 'cucumber-runner', version: '1.3.5'
    compile group: 'io.cucumber', name: 'cucumber-groovy', version: '4.3.0'
    compile "com.amazonaws:aws-java-sdk-sqs:1.11.26"
    compile "info.cukes:cucumber-core:1.2.6"
    compile "info.cukes:cucumber-groovy:1.2.6"
    testCompile "info.cukes:cucumber-junit:1.2.6"
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: '4.3.1'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.0-M1'
    // Tomcat libraries
    compile "org.apache.tomcat.embed:tomcat-embed-core:8.5.23"
    compile "org.apache.tomcat.embed:tomcat-embed-jasper:8.5.23"
    compile "org.apache.tomcat:tomcat-jasper:8.5.23"
    compile "org.apache.tomcat:tomcat-jasper-el:8.5.23"
    compile "org.apache.tomcat:tomcat-jsp-api:8.5.23"
    compile group: 'org.gebish', name: 'geb-core', version: '2.3.1'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-htmlunit-driver', version: '2.52.0'
    compile group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.35.0'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.141.59'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: '3.141.59'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.141.59'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile "javax.media:jai_core:1.1.3"
    compile "javax.media:jai_codec:1.1.3"
    compile "javax.media:jai_imageio:1.1"
    compile("org.geoscript:geoscript-groovy:1.7.0") {
        exclude module: "ehcache"
        exclude module: "slf4j-log4j12"
        exclude module: "xml-apis"
        exclude module: "commons-beanutils"
        exclude module: "gt-jdbc-spatialite"
    }

    cucumberRuntime files("${jar.archivePath}")
}

// Define the main class for the application
mainClassName = 'omar.cucumber.frontend.test.Application'
defaultTasks = ['shadowJar']
version = "${buildVersion}"

shadowJar {
    archiveClassifier.set("")

    manifest {
        attributes 'Main-Class': 'omar.cucumber.frontend.test.App'
    }
    zip64 true
}

run {
    if (multi == "true") {
        environment 'multi', 'true'
    }

    if (runEnvironment == "local") {
        environment 'runEnv', 'local'
    } else {
        environment 'runEnv', ''
    }
}

docker {
    registryCredentials {
        username.set("${dockerRegistryUsername}".toString())
        password.set("${dockerRegistryPassword}".toString())
        url.set("${dockerRegistryUrl}".toString())
    }
}

task createDockerfile(type: Dockerfile) {
    dependsOn shadowJar
    from "${dockerBaseImage}:${dockerBaseImageTag}"
    label(['maintainer': 'MAXAR'])
    runCommand('yum -y update')
    runCommand('yum -y install java-1.8.0-openjdk firefox selenium Xvfb')
    environmentVariable("CURL_USER_NAME", "${cUname}")
    environmentVariable("CURL_PASSWORD", "${cPword}")
    runCommand('useradd -u 1001 -r -g 0 --create-home -d /home/omar -s /sbin/nologin -c \'Default Application User\' omar')
    environmentVariable("HOME", "/home/omar")
    runCommand('mkdir /home/omar/build')
    runCommand('mkdir /home/omar/build/classes')
    runCommand('mkdir /home/omar/src')
    runCommand('mkdir /home/omar/src/main')
    copyFile('main/', '/home/omar/src/main')
    copyFile('groovy', '/home/omar/build/classes')
    copyFile("omar-cucumber-frontend-test-${version}.jar", '/home/omar/')
    copyFile('geckodriver', '/home/omar/')
    runCommand('chown 1001:0 -R /home/omar')
    runCommand('chmod -R 777 /home/omar')
    user('1001')
    volume('/conf')
    workingDir('/home/omar')
    environmentVariable("DISPLAY", ':1')
    exposePort(8080)
    defaultCommand('java', '-server', '-Xms256m', '-Xmx1024m', '-Djava.awt.headless=true', '-XX:+CMSClassUnloadingEnabled', '-XX:+UseGCOverheadLimit', '-Djava.security.egd=file:/dev/./urandom', '-Dwebdriver.gecko.driver=geckodriver', '-jar', "omar-cucumber-frontend-test-${version}.jar")
}

task copyFile(type: Copy) {
    dependsOn createDockerfile
    from 'src'
    from 'build/classes'
    from "build/libs/omar-cucumber-frontend-test-${version}.jar"
    from 'geckodriver'
    from 'docker-entrypoint.sh'
    from 'java/java-1.8.0-openjdk-1.8.0.181-7.b13.el7.x86_64.rpm'
    from 'firefox/firefox-66.0.5.tar.bz2'
    into 'build/docker'
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn copyFile
    tags.add("${project.name}:${buildVersion}")
}

task tagDockerImage(type: DockerTagImage) {
    dependsOn buildDockerImage
    targetImageId "${project.name}:${buildVersion}"
    tag.set("${buildVersion}".toString())
    repository.set("${dockerRegistryUrl}/${project.name}".toString())
}

task pushDockerImage(type: DockerPushImage) {
    dependsOn tagDockerImage
    registryCredentials = registryCredentials
    imageName.set("${dockerRegistryUrl}/${project.name}".toString())
    tag.set("${buildVersion}".toString())
}
